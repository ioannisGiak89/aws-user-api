name: Main

on:
    workflow_dispatch:
    push:
        branches: [main]
        paths-ignore:
            - 'README.md'
            - 'example.env'
            - 'CHANGELOG.md'
    pull_request:
        types: [opened, synchronize, edited, ready_for_review, labeled]
        branches: [main]
        paths-ignore:
            - 'README.md'
            - 'example.env'
            - 'CHANGELOG.md'

jobs:
    pr-name-lint:
        name: PR Name Linter
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
              with:
                  node-version: 14

            - name: npm install
              run: npm ci
              env:

            - uses: JulienKode/pull-request-name-linter-action@v0.2.0
              with:
                  configuration-path: ./.commitlintrc.json
    lint:
        name: Linting
        runs-on: ubuntu-latest
        needs: pr-name-lint
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
              with:
                  node-version: 14

            - uses: actions/cache@v2
              id: node_modules
              with:
                  path: node_modules
                  key: ${{ hashFiles('package-lock.json') }}

            - name: npm install
              if: steps.node_modules.outputs.cache-hit != 'true'
              run: npm ci
              env:
                  NODE_AUTH_TOKEN: ${{secrets.ESG_GITHUB_READ_PACKAGE_TOKEN}}

            - name: lint
              run: npx xo .

            - name: prettier
              run: npx prettier --check .

    audit:
        name: NPM Package Audit
        runs-on: ubuntu-latest
        needs: pr-name-lint
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
              with:
                  node-version: 14

            - uses: actions/cache@v2
              id: node_modules
              with:
                  path: node_modules
                  key: ${{ hashFiles('package-lock.json') }}

            - name: npm install
              if: steps.node_modules.outputs.cache-hit != 'true'
              run: npm ci

            - name: NPM audit
              run: npx better-npm-audit audit -p -l moderate -i 1560

    test:
        name: Tests
        runs-on: ubuntu-latest
        needs: pr-name-lint
        steps:
            - uses: actions/checkout@v2

            - name: Setup node
              uses: actions/setup-node@v1
              with:
                  node-version: 14

            - uses: actions/cache@v2
              id: node_modules
              with:
                  path: node_modules
                  key: ${{ hashFiles('package-lock.json') }}

            - name: npm install
              if: steps.node_modules.outputs.cache-hit != 'true'
              run: npm ci

            - name: Setup localstack
              run: |
                  docker-compose up -d

            - name: Wait for docker for 30 secs
              run: sleep 30

            - name: Run tests
              run: |
                  npm test -- --passWithNoTests
              env:
                  CI: true

    build:
        name: Build
        runs-on: ubuntu-latest
        needs: pr-name-lint
        steps:
            - uses: actions/checkout@v2

            - name: Setup node
              uses: actions/setup-node@v1
              with:
                  node-version: 14

            - uses: actions/cache@v2
              id: node_modules
              with:
                  path: node_modules
                  key: ${{ hashFiles('package-lock.json') }}

            - name: npm install
              if: steps.node_modules.outputs.cache-hit != 'true'
              run: npm ci

            - name: CDK Build
              run: |
                  npm run build --if-present

    deploy:
        name: Deploy
        if: ${{ github.event_name != 'pull_request }}
        needs:
            - lint
            - test
            - unit
            - audit
            - build
        steps:
            - uses: actions/checkout@v2

            - name: Setup node
              uses: actions/setup-node@v1
              with:
                  node-version: 14

            - uses: actions/cache@v2
              id: node_modules
              with:
                  path: node_modules
                  key: ${{ hashFiles('package-lock.json') }}

            - name: npm install
              if: steps.node_modules.outputs.cache-hit != 'true'
              run: npm ci
              env:
                  NODE_AUTH_TOKEN: ${{secrets.ESG_GITHUB_READ_PACKAGE_TOKEN}}

            - name: Cdk bootstrap & deploy
              run: |
                  npm run build --if-present
                  cdk bootstrap --role-arn arn:aws:iam::$AWS_ACCOUNT_ID:role/GithubDeploymentRole --toolkit-stack-name $STACK_NAME-cdk-toolkit
                  cdk deploy --require-approval never --role-arn arn:aws:iam::$AWS_ACCOUNT_ID:role/GithubDeploymentRole --toolkit-stack-name $STACK_NAME-cdk-toolkit
